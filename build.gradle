plugins {
    id 'application'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceSets.main.java.srcDirs = ['src']
mainClassName = 'MovieRandomizer.MovieRandomizer'


repositories {
    mavenCentral()
}

apply plugin: 'java'
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.Movie.Randomizer.MovieRandomizer'
        )
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.8'
    // https://mvnrepository.com/artifact/org.springframework/spring-context-support
    implementation group: 'org.springframework', name: 'spring-context-support', version: '5.3.8'
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    // https://mvnrepository.com/artifact/javax.persistence/persistence-api
    implementation group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
    // jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.14.1'
    testImplementation 'org.apache.httpcomponents:httpclient'

    task stage(type: Copy, dependsOn: [clean, build]) {
        from jar.archivePath
        into project.rootDir
        rename {
            'app.jar'
        }
    }

    bootJar {
        archiveClassifier.set('boot')
    }

    jar {
        archiveClassifier.set('')
    }

    tasks.jar {
        enabled = false
    }

    stage.mustRunAfter(clean)
    build.mustRunAfter clean

    clean {
        project.file('app.jar').delete()
    }



}

test {
    useJUnitPlatform()
}